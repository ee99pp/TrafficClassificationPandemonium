preprocess:
  traffic_path: ../traffic_path/android # 原始pcap的路径
  datasets: ../datasets/android # 预处理后npy文件的路径
  packet_num: 4 # 负载特征参数：流的前4包的负载
  byte_num: 256 # 负载特征参数：每个包的前256个字节
  ip_length: 128 # 包长特征参数：提取流前128个包长序列
  threshold: 4 # 阈值：流包长小于4时舍弃
  train_size: 0.8 # 训练集所占比例


train:
  train_pay: /home/xl/TrafficClassificationPandemonium/datasets/android/train/pay_load.npy
  # train_seq: ../npy_data/test/test/ip_length.npy
  train_seq: /home/xl/TrafficClassificationPandemonium/datasets/android/train/ip_length.npy
  train_sta: None
  train_label: /home/xl/TrafficClassificationPandemonium/datasets/android/train/label.npy
  test_pay: /home/xl/TrafficClassificationPandemonium/datasets/android/train/pay_load.npy
  test_seq: /home/xl/TrafficClassificationPandemonium/datasets/android/train/ip_length.npy
  test_sta: None
  test_label: /home/xl/TrafficClassificationPandemonium/datasets/android/train/label.npy
  BATCH_SIZE: 128
  epochs: 50 # 训练的轮数
  lr: 0.001 # learning rate
  model_dir: /home/xl/TrafficClassificationPandemonium/checkpoint # 模型保存的文件夹
  # model_name: cnn1d.pth # 模型的名称
  model_name: app-net.pth # 模型的名称

  


test:
  evaluate: True # 如果是 True, 则不进行训练, 只进行评测
  pretrained: True # 是否有训练好的模型# # # {'Chat': 0, 'Email': 1, 'FT': 2, 'P2P': 3, 'Streaming': 4, 'VoIP': 5, 'VPN_Chat': 6, 'VPN_Email': 7, 'VPN_FT': 8, 'VPN_P2P': 9, 'VPN_Streaming': 10, 'VPN_VoIP': 11}
  label2index: {'qq': 0, '微信': 1, '淘宝': 2}
  confusion_path: /home/xl/TrafficClassificationPandemonium/result/confusion/ConfusionMatrix-app-net.png